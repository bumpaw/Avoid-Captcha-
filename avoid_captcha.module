<?php
// <!-- phpDesigner :: Timestamp [2/1/2011 5:24:13 PM] -->
/**
 * @file
 * Qualifies users so they don't need to be shown a captcha
 * 
 * Only users with javascript enabled and a session cookie 
 * can submit the form. Bots should have neither.
 */
function avoid_captcha_form_alter(&$form, &$form_state, $form_id)
{    
    global $secret_salt;
    $secret_salt = variable_get('avoid_captcha_secret_salt', 'secret salt');

    // Add needed javascript that runs when the page loads
    $in_settings = variable_get('avoid_captcha_form_ids', array());
    if (in_array($form_id, $in_settings)) {
        $selector_id = str_replace('_', '-', $form_id);
        $js_add = 'jQuery(document).ready( function(){jQuery(".warning").remove();
jQuery.get("/sites/all/modules/custom/avoidcaptcha/cap_sub/token.php",function(txt){
jQuery("#' . $selector_id . '").append(\'<input type="hidden" name="ts" value="\'+txt+\'" />\');
});
});';
        $javascript = drupal_add_js($js_add, 'inline');

        // Add warning when javascript is not detected
        $form['nojavascript'] = array('#prefix' =>
            '<p class="warning"><span style="color:red;">', '#markup' => t('You must have javascript enabled to use this form.'),
            '#suffix' => '</span></p>', '#weight' => -5, );

        // Give it a function for validation
        $form['#validate'][] = 'avoid_captcha_form_validate';

    }
}

// validation should eliminate a bot with no cookies, javascript or
// who took too long possibly submitting the form repeatedly.
function avoid_captcha_form_validate($form, &$form_state)
{
    global $secret_salt;
    
    $proceed = false;
    // Time allowed is set in admin.
    $mins_allowed = variable_get('avoid_captcha_time_out', 10);
    $seconds = (60 * $mins_allowed);
    
    if (isset($_POST['ts']) && isset($_COOKIE['token']) && $_COOKIE['token'] == md5
        ($secret_salt . $_POST['ts'])) {
        $proceed = true;
    }

    if (!$proceed) {
        form_set_error('', t('Form processing halted for suspicious activity'));
    } else
        if (((int)$_POST['ts'] + $seconds) < mktime()) {
            form_set_error('', t('Too much time elapsed'));
        }
}

// For admin below
/**
 * Implement hook_menu().
 */
function avoid_captcha_menu()
{

    $items['admin/config/content/avoid-captcha'] = array('title' => 'Avoid Captcha',
        'description' => 'Manage which forms should be protected with Avoid Captcha.',
        'page callback' => 'drupal_get_form', 'page arguments' => array('avoid_captcha_settings'),
        'access arguments' => array('administer avoid captcha'), 'type' =>
        MENU_NORMAL_ITEM, 'file' => 'avoid_captcha.admin.inc', );
    return $items;
}

/**
 * For admin submit function
 */
function avoid_captcha_admin_submit($form, &$form_state)
{
    variable_set('avoid_captcha_form_ids', array_filter($form_state['values']['protect_forms']));

}
/**
 * validation for the admin form
 */
function avoid_captcha_admin_validate($form, &$form_state){
    $time = $form_state['values']['avoid_captcha_time_out'];
    if (!ctype_digit ($time)) {
        form_set_error('avoid_captcha_time_out', 'Please use a 1 or 2 digit value for Timeout');
}
}

/**
 * Implement hook_permission
 */
function avoid_captcha_permission()
{
    return array('administer avoid captcha' => array('title' => t('Administer Avoid Captcha'),
        'description' => t('Perform administration tasks for Avoid Captcha.')), );
}
